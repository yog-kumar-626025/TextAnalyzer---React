{"version":3,"sources":["logo.svg","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.af90a9ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Contect Us\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className= {`form-check form-switch text-${props.mode ==='light'?'dark':'light'}`}>\r\n         <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n         <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n         </div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { \r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired };\r\n\r\n    Navbar.defaultProps = { // propes pass na karne par default value set ho jate hai\r\n        title: 'Set title here',\r\n        aboutText: 'This About'\r\n    };","import React, {useState} from 'react' // useState = it is  a Hook\r\n//  ustate hook hame ek state variable banane me help karta hai\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\",\"success\");\r\n      }\r\n      \r\n      const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\",\"success\");\r\n      }\r\n      \r\n      const handleClearClick = ()=>{\r\n        // console.log(\"Uppercase was Clicked\" + text);\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text is clear\",\"success\");\r\n      }\r\n      \r\n      const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n      }\r\n      \r\n      // add wala\r\n      const handleCopy = () => {\r\n        console.log(\"This is Copy\");\r\n        var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy to clipboard\",\"success\");\r\n        \r\n      }\r\n      \r\n      // 2 add wala\r\n      const handleExtraSpaces = () => {\r\n        let newText = text.split(/[  ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces removed\",\"success\");\r\n\r\n  }\r\n\r\n\r\n\r\n    const [text, setText] = useState ('Enter text here'); // ise Yaad kar lo :)\r\n    // text chnge karne ke liye setText ka usr karnege\r\n    //setText(\"New Text by Yogesh kumar\");\r\n    return (\r\n      <>\r\n      <div className=\"container\" style={{color: props.mode==='dark'?'White':'#1d0446'}} >\r\n\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"form-group my-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#1d0446':'white', color: props.mode==='dark'?'White':'#1d0446'}} id=\"exampleFormControlTextarea1\" rows=\"7\"></textarea>\r\n      </div>\r\n     <div>\r\n        <button type=\"submit\" className=\"btn btn-success mx-2\" onClick={handleUpClick}>Switch to UpperCase</button>\r\n      \r\n        <button type=\"submit\" className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Switch to LowerCase</button>\r\n\r\n        <button type=\"submit\" className=\"btn btn-danger mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n\r\n        <button type=\"submit\" className=\"btn btn-warning mx-2\" onClick={handleCopy}>Copy Text</button>\r\n\r\n        <button type=\"submit\" className=\"btn btn-danger mx-2\" onClick={handleExtraSpaces}>Remove Extre Spaces</button>\r\n      </div>\r\n        {/* <div className=\"form-group\">\r\n          <label for=\"exampleInputPassword1\">Password</label>\r\n          <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\"/>\r\n        </div>\r\n        <div className=\"form-group form-check\">\r\n          <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\"/>\r\n          <label className=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n        </div>\r\n        <div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n      </div> */}\r\n  </div>\r\n  <div className=\"container my-3\" style={{color: props.mode==='dark'?'White':'#1d0446'}} >\r\n    <h2>Your Text Summary</h2>\r\n    <p>{text.split(\" \").length} Word and {text.length} Characters</p>\r\n    <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter Something In the text box To Preview it Here\"}</p>\r\n\r\n  </div>\r\n  </>\r\n    \r\n    )\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize (props.alert.type)}</strong>: {props.alert.msg}\r\n   \r\n      </div>\r\n       )\r\n}\r\n\r\nexport default Alert\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\n//  import About from './components/About';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() { \n  const [mode, setMode] = useState('light'); // Told me Whether dark mode is enabled  or not\n  const [alert, setAlert] = useState(null); // yaha alert ko ek Onbject bana rahe hai \n  \n  const showAlert = (message, type)=>{ // here Showalert function hai   alert msg ko show kane me help karega\n        setAlert({\n          msg: message,\n          type: type,\n        })\n        setTimeout(() => {\n            setAlert(null);\n        }, 2000);\n\n  }\n  const  toggleMode = ()=>{\n     if(mode === 'light'){\n       setMode ('dark');\n       document.body.style.backgroundColor = '#1d0446';\n       showAlert(\"Dark mode has been Enabled\", \"success\");\n       document.title = 'TextAnalyzer - Dark Mode';\n\n       // Title ko continue change karne ke liye use hota hai\n      //  setInterval(() => {\n      //    document.title = 'TextAnalyzer is Awsome Mode';\n         \n      //  }, 2000);\n\n      //  setInterval(() => {\n      //    document.title = ' Install TextAnalyzer now';\n         \n      //  }, 1600);\n       }\n      else{\n        setMode ('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light mode has been Enabled\", \"success\");\n        document.title = 'TextAnalyzer - Light Mode';\n     }\n   } \n\n  return ( \n    <>\n   {/* <Navbar title =\"Mytext\" aboutText=\"About MyText\"/> */}\n   {/* <Router> */}\n   <Navbar title =\"Mytext\" mode={mode} toggleMode={toggleMode} />\n   <Alert alert= {alert}/>\n\n   <div className=\"container my-3\">\n   {/* <Switch>\n          <Route exact path=\"/about\"> \n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n    <Textform showAlert ={showAlert} heading=\"ENTER THE TEXT TO ANALYSIS BELOW\" mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n\n   </div>\n    {/* </Router> */}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}